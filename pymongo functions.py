import pymongo

if __name__ == "__main__":  
    print("welcome to pymongo")
    client= pymongo.MongoClient("mongodb://localhost:27017/")
    print(client)

    db = client["Krish"]

    collection1 = db["myfirst_collection"]

    #Insert Documents
    #mydict = {'Name':'Rahul','Age':26,"city":"Chennai"}
    #collection1.insert_one(mydict)  #we can add single document using these method.

    #mydict2 = [
      #  {'Name':'Sampath','Age':25,'City':"Bangalore"},
      #  {'Name':'Samuel','Age':26,'City':"Chennai"},
      #  {'Name':'Siva','Age':24,'City':"Hyderabaad"},
      #  {'Name':'Vivek','Age':30,'City':"Bangalore"},
      #  {'Name':'Madhan','Age':25,'City':"Bangalore"}
    #]
    #collection1.insert_many(mydict2)   #we can add multiple documents using these method, how many times we execute this command everytime documents will get created
    #here duplicate documents are allowed no constraints available
    #for every document there will be a unique id automatically generated by the mongod

    #FInd or display documents
    #one = collection1.find_one({'Name': 'Sampath'}) #to find any particular document we can use these command
    #print(one)

    alldocs = collection1.find()
    print(alldocs) #we cannot directly print alldocs we have to iterate it
    for item in alldocs:
        print(item)

    #alldocs1 = collection1.find().limit(2)  #using limit() we can restrict the o/p with some range
    #print(alldocs1)
    #for item in alldocs1:
        #print(item)

    #alldocs2 = collection1.find().count()  #using count() we can count how many documents present in particular colleciton
    #print(alldocs2)
    #for item in alldocs2:
        #print(item)
    # we have some more functions to find that is $lt:;less than,$gt:greaterthan,$lte;lessthan or equalto,#gte...

    #Update Documents
    #prev = {'Name':"Vivek"}
    #updated = {"$set":{"City":"Mumbai"}}
    #collection1.update_one(prev,updated)  # to edit or update or add any one document we can  use this methods with or without variables
    #collection1.update_many(prev,updated)  #to update more than one documents at once

    #Delete Documetns
    #doc = {"Name":"Samuel"}
    #collection1.delete_one(doc) # it will delete that particular record

    #doc1 = {"Name":"Sunil"}
    #many = collection1.delete_many(doc1) #we can delete multiple documents at once
    #print(many.deleted_count)  # this will show how many documents are deleted.

    # Display Databases
    #showdbs = client.list_database_names() #to check how many databases are available in our local host
    #print(showdbs)

    #Display collections
    #print(db.list_collection_names())  #by using database reference variable in starting and using list_collection_names() we can display all collections in particular database
